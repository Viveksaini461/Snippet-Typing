{
  "snippets": [
    { "level": "beginner", "code": "void main() {\n  print('Hello, Dart!');\n}" },
    { "level": "beginner", "code": "int x = 5;\nprint(x);" },
    { "level": "beginner", "code": "String name = 'Dart';\nprint(name);" },
    { "level": "beginner", "code": "if (x > 3) print('Big');" },
    { "level": "beginner", "code": "for (var i = 1; i <= 3; i++) print(i);" },
    { "level": "beginner", "code": "var sum = x + 2;\nprint(sum);" },
    { "level": "beginner", "code": "var list = [1,2,3];\nprint(list[0]);" },
    { "level": "beginner", "code": "bool flag = true;\nprint(flag);" },
    { "level": "beginner", "code": "double pi = 3.14;\nprint(pi);" },
    { "level": "beginner", "code": "var f = (a, b) => a + b;\nprint(f(2,3));" },

    { "level": "intermediate", "code": "int add(int a, int b) => a + b;\nprint(add(3,4));" },
    { "level": "intermediate", "code": "List<String> names = ['A','B'];\nnames.forEach((n) => print(n));" },
    { "level": "intermediate", "code": "var map = {'a':1, 'b':2};\nprint(map['b']);" },
    { "level": "intermediate", "code": "class Person {\n  String name;\n  Person(this.name);\n}" },
    { "level": "intermediate", "code": "var p = Person('Bob');\nprint(p.name);" },
    { "level": "intermediate", "code": "var even = list.where((n) => n%2==0);\nprint(even);" },
    { "level": "intermediate", "code": "Map<String,int> map2 = {'x':10};\nprint(map2.keys);" },
    { "level": "intermediate", "code": "final sq = list.map((n)=>n*n);\nprint(sq);" },
    { "level": "intermediate", "code": "dynamic val = 5; print(val.runtimeType);" },
    { "level": "intermediate", "code": "String s = 'dart';\ns = s.toUpperCase();\nprint(s);" },

    { "level": "advanced", "code": "Future<String> fetchData() async {\n  return 'Hello';\n}" },
    { "level": "advanced", "code": "await fetchData().then((v)=>print(v));" },
    { "level": "advanced", "code": "class Point<T> {\n  T x, y;\n  Point(this.x, this.y);\n}" },
    { "level": "advanced", "code": "List<int> nums = [1,2,3];\nvar total = nums.reduce((a,b)=>a+b);\nprint(total);" },
    { "level": "advanced", "code": "enum Color { red, green, blue }" },
    { "level": "advanced", "code": "Stream<int> counter(int to) async* {\n  for (var i=1; i<=to; i++) yield i;\n}" },
    { "level": "advanced", "code": "class Calculator {\n  int add(int a,int b) => a + b;\n}" },
    { "level": "advanced", "code": "var sq2 = nums.map((n)=>n*n).toList();" },
    { "level": "advanced", "code": "void higherOrder(fn(String), str) {\n  fn(str);\n}" },
    { "level": "advanced", "code": "final list = [1,2,3]; print(list.where((n)=>n>1));" }
  ]
}
