{
  "snippets": [
    { "level": "beginner", "code": "print(\"Hello, R!\")" },
    { "level": "beginner", "code": "x <- 5\nprint(x)" },
    { "level": "beginner", "code": "y <- x * 2\nprint(y)" },
    { "level": "beginner", "code": "vec <- c(1,2,3)\nprint(vec[1])" },
    { "level": "beginner", "code": "name <- \"Alice\"\nprint(paste(\"Hi\", name))" },
    { "level": "beginner", "code": "if (x > 3) print(\"Big\")" },
    { "level": "beginner", "code": "for (i in 1:3) print(i)" },
    { "level": "beginner", "code": "sum <- sum(vec)\nprint(sum)" },
    { "level": "beginner", "code": "mean_val <- mean(vec)\nprint(mean_val)" },
    { "level": "beginner", "code": "seq(1,5)\nprint(seq(1,5))" },

    { "level": "intermediate", "code": "add <- function(a,b) { return(a+b) }\nprint(add(3,4))" },
    { "level": "intermediate", "code": "data <- data.frame(x=1:3, y=4:6)\nprint(head(data))" },
    { "level": "intermediate", "code": "library(ggplot2)\nggplot(data, aes(x,y)) + geom_point()" },
    { "level": "intermediate", "code": "filtered <- subset(data, x>1)\nprint(filtered)" },
    { "level": "intermediate", "code": "vals <- c(1,2,3,4); sapply(vals, sqrt)" },
    { "level": "intermediate", "code": "vec[vec > 2]" },
    { "level": "intermediate", "code": "names(data) <- c('A','B')" },
    { "level": "intermediate", "code": "z <- rnorm(5)\nprint(z)" },
    { "level": "intermediate", "code": "install.packages('dplyr')" },
    { "level": "intermediate", "code": "library(dplyr)\ndata %>% filter(x > 1)" },

    { "level": "advanced", "code": "lm_model <- lm(y ~ x, data=data)\nsummary(lm_model)" },
    { "level": "advanced", "code": "myfunc <- function(...){ args <- list(...)\nreturn(mean(unlist(args))) }" },
    { "level": "advanced", "code": "df <- data.frame(a=1:3, b=rnorm(3)); df" },
    { "level": "advanced", "code": "apply(df, 2, mean)" },
    { "level": "advanced", "code": "for (i in seq_along(df$a)) print(df$a[i])" },
    { "level": "advanced", "code": "saveRDS(df, 'data.rds')\nreadRDS('data.rds')" },
    { "level": "advanced", "code": "ifelse(df$a > 1, 'Yes', 'No')" },
    { "level": "advanced", "code": "mylist <- list(a=1, b=2); unlist(mylist)" },
    { "level": "advanced", "code": "library(tidyr); spread(data, key='A', value='B')" },
    { "level": "advanced", "code": "library(ggplot2)\nggplot(df, aes(x=a,y=b)) + geom_line()" }
  ]
}
