{
  "language": "ReactJS",
  "snippets": [
    {
      "level": "beginner",
      "code": "import React from 'react';\n\nfunction Hello() {\n  return <h1>Hello, React!</h1>;\n}\n\nexport default Hello;"
    },
    {
      "level": "beginner",
      "code": "const App = () => {\n  return <div>Welcome to React</div>;\n};\n\nexport default App;"
    },
    {
      "level": "beginner",
      "code": "import React from 'react';\n\nconst Button = () => <button>Click</button>;\n\nexport default Button;"
    },
    {
      "level": "beginner",
      "code": "const Greeting = ({ name }) => {\n  return <p>Hello, {name}!</p>;\n};"
    },
    {
      "level": "beginner",
      "code": "const Welcome = () => <h2>Welcome!</h2>;\n\nexport default Welcome;"
    },
    {
      "level": "intermediate",
      "code": "import React, { useState } from 'react';\n\nfunction Counter() {\n  const [count, setCount] = useState(0);\n  return (\n    <div>\n      <p>Count: {count}</p>\n      <button onClick={() => setCount(count + 1)}>Increment</button>\n    </div>\n  );\n}\n\nexport default Counter;"
    },
    {
      "level": "intermediate",
      "code": "import React, { useEffect } from 'react';\n\nfunction Timer() {\n  useEffect(() => {\n    const interval = setInterval(() => {\n      console.log('Tick');\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  return <div>Timer running...</div>;\n}"
    },
    {
      "level": "intermediate",
      "code": "const List = ({ items }) => {\n  return (\n    <ul>\n      {items.map((item, index) => (\n        <li key={index}>{item}</li>\n      ))}\n    </ul>\n  );\n};"
    },
    {
      "level": "intermediate",
      "code": "import React from 'react';\n\nconst Conditional = ({ isLoggedIn }) => {\n  return (\n    <div>\n      {isLoggedIn ? <p>Welcome back!</p> : <p>Please login</p>}\n    </div>\n  );\n};"
    },
    {
      "level": "intermediate",
      "code": "function Form() {\n  const [input, setInput] = React.useState('');\n  const handleChange = (e) => setInput(e.target.value);\n  return (\n    <input value={input} onChange={handleChange} placeholder='Type here...' />\n  );\n}"
    },
    {
      "level": "advanced",
      "code": "import React, { useReducer } from 'react';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'increment': return { count: state.count + 1 };\n    case 'decrement': return { count: state.count - 1 };\n    default: return state;\n  }\n};\n\nfunction Counter() {\n  const [state, dispatch] = useReducer(reducer, { count: 0 });\n  return (\n    <div>\n      <button onClick={() => dispatch({ type: 'decrement' })}>-</button>\n      <span>{state.count}</span>\n      <button onClick={() => dispatch({ type: 'increment' })}>+</button>\n    </div>\n  );\n}"
    },
    {
      "level": "advanced",
      "code": "import React, { createContext, useContext, useState } from 'react';\n\nconst ThemeContext = createContext();\n\nfunction ThemeProvider({ children }) {\n  const [dark, setDark] = useState(false);\n  return (\n    <ThemeContext.Provider value={{ dark, setDark }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n}\n\nfunction ThemedComponent() {\n  const { dark, setDark } = useContext(ThemeContext);\n  return (\n    <button onClick={() => setDark(!dark)}>\n      Toggle to {dark ? 'Light' : 'Dark'}\n    </button>\n  );\n}"
    },
    {
      "level": "advanced",
      "code": "import React, { useEffect, useState } from 'react';\n\nfunction FetchData() {\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/posts')\n      .then(res => res.json())\n      .then(setData);\n  }, []);\n\n  return (\n    <ul>\n      {data.slice(0, 5).map(post => <li key={post.id}>{post.title}</li>)}\n    </ul>\n  );\n}"
    }
  ]
}
